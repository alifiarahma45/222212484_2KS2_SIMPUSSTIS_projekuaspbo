/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Main;

import Model.Buku;
import Model.BukuDAO;
import Model.Export;
import java.io.File;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LENOVO
 */
public class DaftarBuku extends javax.swing.JPanel {

   
    private DefaultTableModel tableModel;
    private BukuDAO bukuDAO;
    
    
  

    public DaftarBuku() throws SQLException {
        initComponents();
        bukuDAO = new BukuDAO(); // Inisialisasi BukuDAO
        tableModel = (DefaultTableModel) bukuTable.getModel();
        loadTableData(); // Memuat data buku ke dalam tabel saat panel ini diinisialisasi
        addDocumentListenerToSearchField(); // Menambahkan DocumentListener ke searchTextField
   }
    
   private void loadTableData() {
         new Thread(() -> {
            List<Buku> listBuku = bukuDAO.getAllBuku();
            SwingUtilities.invokeLater(() -> updateTable(listBuku));
        }).start();
    }
   
    // Metode ini bisa digunakan untuk memuat ulang data tabel setelah operasi tambah, edit, atau hapus
    private void updateTable(List<Buku> listBuku) {
        tableModel.setRowCount(0); // Mengosongkan tabel sebelum dimuat ulang

        for (Buku buku : listBuku) {
            Object[] row = {
                buku.getJudulBuku(),
                buku.getPengarang(),
                buku.getPenerbit(),
                buku.getTahunTerbit(),
                buku.getStok()
            };
            tableModel.addRow(row);
        }
    }
    
    private void addDocumentListenerToSearchField() {
        searchTextField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                searchBooks();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                searchBooks();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                searchBooks();
            }

            private void searchBooks() {
                String query = searchTextField.getText();
               if (query.isEmpty() || query.equals("Ketik judul buku untuk pencarian")) {
                loadTableData();
                } else {
                    new Thread(() -> {
                        try {
                            List<Buku> searchResult = bukuDAO.searchBuku(query);
                            SwingUtilities.invokeLater(() -> updateTable(searchResult));
                        } catch (SQLException ex) {
                            Logger.getLogger(DaftarBuku.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }).start();
                }
            }
        });
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exportFileChooser = new javax.swing.JFileChooser();
        hapusButton = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        daftarBuku = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bukuTable = new javax.swing.JTable();
        EditButton = new javax.swing.JButton();
        searchTextField = new javax.swing.JTextField();
        exportButton = new javax.swing.JButton();
        exportPdfButton = new javax.swing.JButton();
        resetPencarianButton = new javax.swing.JButton();
        tambahBukuButton = new javax.swing.JButton();
        editBuku = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        judulTextField = new javax.swing.JTextField();
        pengarangTextField = new javax.swing.JTextField();
        penerbitTextField = new javax.swing.JTextField();
        stokTextField = new javax.swing.JTextField();
        simpanEditButton = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        tahunDateChooser = new com.toedter.calendar.JDateChooser();
        kembaliButton = new javax.swing.JButton();
        uploadBuku = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        judulTextField1 = new javax.swing.JTextField();
        pengarangTextField1 = new javax.swing.JTextField();
        penerbitTextField1 = new javax.swing.JTextField();
        stokTextField1 = new javax.swing.JTextField();
        uploadBukuButton = new javax.swing.JButton();
        btn_batal4 = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        tahunDateChooser1 = new com.toedter.calendar.JDateChooser();

        hapusButton.setText("Hapus");
        hapusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusButtonActionPerformed(evt);
            }
        });

        setBackground(new java.awt.Color(51, 102, 255));
        setPreferredSize(new java.awt.Dimension(571, 486));
        setLayout(new java.awt.CardLayout());

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setMinimumSize(new java.awt.Dimension(900, 860));
        mainPanel.setPreferredSize(new java.awt.Dimension(650, 580));
        mainPanel.setLayout(new java.awt.CardLayout());

        daftarBuku.setBackground(new java.awt.Color(255, 255, 255));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel20.setText("Daftar Buku");

        bukuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Judul Buku", "Pengarang", "Penerbit", "Tahun Terbit", "Stok"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(bukuTable);

        EditButton.setText("Edit");
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        searchTextField.setText("Ketik judul buku untuk pencarian");
        searchTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFieldFocusLost(evt);
            }
        });

        exportButton.setText("Export (.csv)");
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        exportPdfButton.setText("Export (.pdf)");
        exportPdfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportPdfButtonActionPerformed(evt);
            }
        });

        resetPencarianButton.setText("Reset");
        resetPencarianButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetPencarianButtonActionPerformed(evt);
            }
        });

        tambahBukuButton.setText("Tambah Buku");
        tambahBukuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahBukuButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout daftarBukuLayout = new javax.swing.GroupLayout(daftarBuku);
        daftarBuku.setLayout(daftarBukuLayout);
        daftarBukuLayout.setHorizontalGroup(
            daftarBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(daftarBukuLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel20)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(daftarBukuLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(daftarBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(daftarBukuLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(exportPdfButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(exportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(126, 126, 126))
                    .addGroup(daftarBukuLayout.createSequentialGroup()
                        .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetPencarianButton)
                        .addGap(28, 28, 28)
                        .addComponent(tambahBukuButton, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                        .addGap(48, 48, 48)
                        .addComponent(EditButton)
                        .addGap(137, 137, 137))
                    .addGroup(daftarBukuLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        daftarBukuLayout.setVerticalGroup(
            daftarBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(daftarBukuLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(daftarBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resetPencarianButton)
                    .addComponent(tambahBukuButton)
                    .addComponent(EditButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(daftarBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exportPdfButton)
                    .addComponent(exportButton))
                .addContainerGap(371, Short.MAX_VALUE))
        );

        mainPanel.add(daftarBuku, "card2");

        editBuku.setBackground(new java.awt.Color(255, 255, 255));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel21.setText("Update Buku");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel22.setText("Pengarang :");

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel23.setText("Stok");

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel24.setText("Judul Buku :");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel25.setText("Penerbit");

        simpanEditButton.setBackground(new java.awt.Color(204, 204, 255));
        simpanEditButton.setText("Simpan");
        simpanEditButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        simpanEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanEditButtonActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel26.setText("Tahun Terbit");

        tahunDateChooser.setBackground(new java.awt.Color(31, 43, 91,0));
        tahunDateChooser.setForeground(new java.awt.Color(255, 255, 255));
        tahunDateChooser.setToolTipText("");
        tahunDateChooser.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N

        kembaliButton.setBackground(new java.awt.Color(204, 204, 255));
        kembaliButton.setText("Kembali");
        kembaliButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        kembaliButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembaliButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(kembaliButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(simpanEditButton))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel22)
                            .addComponent(jLabel25)
                            .addComponent(jLabel23)
                            .addComponent(jLabel26))
                        .addGap(108, 108, 108)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(stokTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                            .addComponent(judulTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                            .addComponent(pengarangTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                            .addComponent(penerbitTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                            .addComponent(tahunDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(281, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(judulTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(pengarangTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(penerbitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel26))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(tahunDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stokTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(simpanEditButton)
                    .addComponent(kembaliButton))
                .addContainerGap(192, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout editBukuLayout = new javax.swing.GroupLayout(editBuku);
        editBuku.setLayout(editBukuLayout);
        editBukuLayout.setHorizontalGroup(
            editBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editBukuLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(editBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(editBukuLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(0, 662, Short.MAX_VALUE)))
                .addContainerGap())
        );
        editBukuLayout.setVerticalGroup(
            editBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editBukuLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 259, Short.MAX_VALUE))
        );

        mainPanel.add(editBuku, "card2");

        uploadBuku.setBackground(new java.awt.Color(255, 255, 255));

        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel27.setText("Upload Buku");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel28.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel28.setText("Pengarang :");

        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel29.setText("Stok");

        jLabel30.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel30.setText("Judul Buku :");

        jLabel31.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel31.setText("Penerbit");

        uploadBukuButton.setBackground(new java.awt.Color(204, 204, 255));
        uploadBukuButton.setText("Simpan");
        uploadBukuButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        uploadBukuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadBukuButtonActionPerformed(evt);
            }
        });

        btn_batal4.setBackground(new java.awt.Color(204, 204, 255));
        btn_batal4.setText("Kembali");
        btn_batal4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_batal4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batal4ActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel32.setText("Tahun Terbit");

        tahunDateChooser1.setBackground(new java.awt.Color(31, 43, 91,0));
        tahunDateChooser1.setForeground(new java.awt.Color(255, 255, 255));
        tahunDateChooser1.setToolTipText("");
        tahunDateChooser1.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btn_batal4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(uploadBukuButton))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30)
                            .addComponent(jLabel28)
                            .addComponent(jLabel31)
                            .addComponent(jLabel29)
                            .addComponent(jLabel32))
                        .addGap(108, 108, 108)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(stokTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                            .addComponent(judulTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                            .addComponent(pengarangTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                            .addComponent(penerbitTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                            .addComponent(tahunDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(281, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(judulTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(pengarangTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(penerbitTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel32))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(tahunDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stokTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addGap(31, 31, 31)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uploadBukuButton)
                    .addComponent(btn_batal4))
                .addContainerGap(192, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout uploadBukuLayout = new javax.swing.GroupLayout(uploadBuku);
        uploadBuku.setLayout(uploadBukuLayout);
        uploadBukuLayout.setHorizontalGroup(
            uploadBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uploadBukuLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(uploadBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(uploadBukuLayout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addGap(0, 663, Short.MAX_VALUE)))
                .addContainerGap())
        );
        uploadBukuLayout.setVerticalGroup(
            uploadBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uploadBukuLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel27)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 259, Short.MAX_VALUE))
        );

        mainPanel.add(uploadBuku, "card2");

        add(mainPanel, "card2");
    }// </editor-fold>//GEN-END:initComponents
    
    int  idBuku ;
    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
   int selectedRow = bukuTable.getSelectedRow();                         
    if (selectedRow != -1) {
        try {
            // Mengambil data dari baris yang dipilih
            String judulBuku = bukuTable.getValueAt(selectedRow, 0).toString();
            String pengarang = bukuTable.getValueAt(selectedRow, 1).toString();
            String penerbit = bukuTable.getValueAt(selectedRow, 2).toString();
            String tahunTerbit = bukuTable.getValueAt(selectedRow, 3).toString(); // Mengambil tahunTerbit sebagai String
            int stok = Integer.parseInt(bukuTable.getValueAt(selectedRow, 4).toString());
            
            // Dapatkan idBuku dari database
            idBuku = bukuDAO.getIdBukuByJudul(judulBuku); // Pastikan variabel idBuku sudah dideklarasikan sebelumnya
            
            // Navigasi ke panel editBuku
            mainPanel.removeAll();
            mainPanel.add(editBuku);
            mainPanel.repaint();
            mainPanel.revalidate();
            
            // Memperbarui form edit buku dengan data yang diambil
            judulTextField.setText(judulBuku);
            pengarangTextField.setText(pengarang);
            penerbitTextField.setText(penerbit);
            tahunDateChooser.setDateFormatString("yyyy-MM-dd"); // Atur format yang sesuai dengan tampilan tahunDateChooser
            tahunDateChooser.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(tahunTerbit)); // Parse String tahunTerbit menjadi Date
            stokTextField.setText(String.valueOf(stok));

        } catch (SQLException ex) {
            Logger.getLogger(DaftarBuku.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengambil data buku dari database.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Data stok buku tidak valid.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Format tahun terbit buku tidak valid.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Pilih buku terlebih dahulu", "Peringatan", JOptionPane.WARNING_MESSAGE);
    }

    }//GEN-LAST:event_EditButtonActionPerformed

    private void hapusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusButtonActionPerformed
        // TODO add your handling code here:                                         
    int selectedRow = bukuTable.getSelectedRow();                         
    
    if (selectedRow != -1) {
        // Mengambil data dari baris yang dipilih
        String judulBuku = bukuTable.getValueAt(selectedRow, 0).toString();
        int idBuku ;

        try {
            // Mendapatkan id_buku berdasarkan judul buku
            idBuku = bukuDAO.getIdBukuByJudul(judulBuku);
        } catch (SQLException ex) {
            Logger.getLogger(DaftarBuku.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Gagal menghapus buku: " + ex.getMessage());
            return; // Keluar dari metode jika terjadi kesalahan
        }
        
        // Konfirmasi penghapusan buku
        int option = JOptionPane.showConfirmDialog(this, "Anda yakin ingin menghapus buku ini?", "Konfirmasi Hapus Buku", JOptionPane.YES_NO_OPTION);
        
        if (option == JOptionPane.YES_OPTION) {
            try {
                // Panggil method untuk menghapus buku dari database
                bukuDAO.hapusBuku(idBuku);
            } catch (SQLException ex) {
                Logger.getLogger(DaftarBuku.class.getName()).log(Level.SEVERE, null, ex);
            }
            // Setelah menghapus, perbarui tampilan tabel
            JOptionPane.showMessageDialog(this, "Buku berhasil dihapus!");
            loadTableData();
        }
    } else {
        JOptionPane.showMessageDialog(this, "Pilih buku terlebih dahulu");
    }

    
    }//GEN-LAST:event_hapusButtonActionPerformed

    private void clearForm() {
    judulTextField.setText("");
    pengarangTextField.setText("");
    penerbitTextField.setText("");
    tahunDateChooser.setDate(null);
    stokTextField.setText("");
}
     private void clearForm1() {
    judulTextField1.setText("");
    pengarangTextField1.setText("");
    penerbitTextField1.setText("");
    tahunDateChooser1.setDate(null);
    stokTextField1.setText("");
}
    
    private void simpanEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanEditButtonActionPerformed
// Untuk update buku
try {
    // Pastikan idBuku sudah diisi dengan id_buku yang akan diupdate atau disimpan baru
    String judulBuku = judulTextField.getText().trim();
    String pengarang = pengarangTextField.getText().trim();
    String penerbit = penerbitTextField.getText().trim();
  // Ambil tanggal dari tahunDateChooser
    Date tahunDate = tahunDateChooser.getDate();
    
    // Buat objek SimpleDateFormat untuk mengambil tahun dalam format yyyy
      SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String tahunTerbit = dateFormat.format(tahunDate); // Mengambil tahun dalam format yyyy
     
    int stok = Integer.parseInt(stokTextField.getText().trim());

    // Panggil method untuk update atau simpan buku ke database
    // Panggil method updateBuku dari BukuDAO
    bukuDAO.updateBuku(idBuku, judulBuku, pengarang, penerbit, tahunTerbit, stok);
    System.out.println(idBuku);
    loadTableData();
    clearForm();
            
            mainPanel.removeAll();
            mainPanel.add(daftarBuku);
            mainPanel.repaint();
            mainPanel.revalidate();
    // Tampilkan pesan sukses
    JOptionPane.showMessageDialog(this, "Buku berhasil diedit!");


} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "Masukkan angka yang valid untuk stok!", "Error", JOptionPane.ERROR_MESSAGE);
} catch (SQLException ex) {
    Logger.getLogger(DaftarBuku.class.getName()).log(Level.SEVERE, null, ex);
    JOptionPane.showMessageDialog(this, "Terjadi kesalahan dalam mengupdate buku: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_simpanEditButtonActionPerformed

    private void kembaliButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembaliButtonActionPerformed
        // TODO add your handling code here:
        clearForm();
        mainPanel.removeAll();
        mainPanel.add(daftarBuku);
        mainPanel.repaint();
        mainPanel.revalidate();

    }//GEN-LAST:event_kembaliButtonActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        // TODO add your handling code here:
        // Tampilkan JFileChooser saat tombol export diklik
        exportFileChooser.setDialogTitle("Specify a file to save");
        int userSelection = exportFileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = exportFileChooser.getSelectedFile();
            // Tambahkan ekstensi .csv jika pengguna tidak menambahkannya
            if (!fileToSave.getAbsolutePath().endsWith(".csv")) {
                fileToSave = new File(fileToSave.getAbsolutePath() + ".csv");
            }
            Export.exportTableToCSV(bukuTable, fileToSave.getAbsolutePath());
        }
    }//GEN-LAST:event_exportButtonActionPerformed

    private void exportPdfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportPdfButtonActionPerformed
        // TODO add your handling code here:
        exportFileChooser = new JFileChooser();
        Export export = new Export();
        exportFileChooser.setDialogTitle("Specify a file to save");
        int userSelection = exportFileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = exportFileChooser.getSelectedFile();
            // Tambahkan ekstensi .pdf jika pengguna tidak menambahkannya
            if (!fileToSave.getAbsolutePath().endsWith(".pdf")) {
                fileToSave = new File(fileToSave.getAbsolutePath() + ".pdf");
            }
            export.exportTableToPDF(bukuTable, fileToSave.getAbsolutePath());
        }
    }//GEN-LAST:event_exportPdfButtonActionPerformed

    private void resetPencarianButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetPencarianButtonActionPerformed
        // TODO add your handling code here:
        searchTextField.setText("Ketik judul buku untuk pencarian");
    }//GEN-LAST:event_resetPencarianButtonActionPerformed

    private void searchTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldFocusGained
        // TODO add your handling code here:
        if (searchTextField.getText().equals("Ketik judul buku untuk pencarian")) {
                    searchTextField.setText("");
                }
    }//GEN-LAST:event_searchTextFieldFocusGained

    private void searchTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldFocusLost
        if (searchTextField.getText().isEmpty()) {
        searchTextField.setText("Ketik judul buku untuk pencarian");
    }
    }//GEN-LAST:event_searchTextFieldFocusLost

    private void tambahBukuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahBukuButtonActionPerformed
        // TODO add your handling code here:
        mainPanel.removeAll();
        mainPanel.add(uploadBuku);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_tambahBukuButtonActionPerformed

    private void uploadBukuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadBukuButtonActionPerformed
   //Untuk menyimpan buku baru
   try {
    String judulBuku = judulTextField1.getText().trim();
    String pengarang = pengarangTextField1.getText().trim();
    String penerbit = penerbitTextField1.getText().trim();
    
    // Ambil tanggal lengkap dari tahunDateChooser1
    Date tahunDate = tahunDateChooser1.getDate();
    
    // Buat objek SimpleDateFormat untuk mengambil tanggal dalam format yyyy-MM-dd
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String tahunTerbit = dateFormat.format(tahunDate); // Mengambil tanggal lengkap dalam format yyyy-MM-dd
    
    String stokString = stokTextField1.getText().trim();
    
    if (!stokString.isEmpty() && stokString.matches("\\d+")) {
        int stokBuku = Integer.parseInt(stokString);
        
        // Buat objek Buku baru
        Buku buku = new Buku(judulBuku, pengarang, penerbit, tahunTerbit, stokBuku);
        
        // Simpan buku ke database menggunakan DAO atau langsung di sini
        BukuDAO bukuDAO = new BukuDAO();
        boolean berhasilDisimpan = bukuDAO.simpanBuku(buku);
        
        if (berhasilDisimpan) {
            JOptionPane.showMessageDialog(this, "Buku berhasil disimpan!");
            loadTableData();
            clearForm1();
            
            mainPanel.removeAll();
            mainPanel.add(daftarBuku);
            mainPanel.repaint();
            mainPanel.revalidate();
        } else {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan buku!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(null, "Masukkan stok buku dalam format angka yang valid.");
    }
} catch (SQLException ex) {
    Logger.getLogger(DaftarBuku.class.getName()).log(Level.SEVERE, null, ex);
    JOptionPane.showMessageDialog(this, "Terjadi kesalahan dalam menyimpan buku: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}


    }//GEN-LAST:event_uploadBukuButtonActionPerformed

    private void btn_batal4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batal4ActionPerformed
        // TODO add your handling code here:
        mainPanel.removeAll();
        mainPanel.add(daftarBuku);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_btn_batal4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EditButton;
    private javax.swing.JButton btn_batal4;
    private javax.swing.JTable bukuTable;
    private javax.swing.JPanel daftarBuku;
    private javax.swing.JPanel editBuku;
    private javax.swing.JButton exportButton;
    private javax.swing.JFileChooser exportFileChooser;
    private javax.swing.JButton exportPdfButton;
    private javax.swing.JButton hapusButton;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField judulTextField;
    private javax.swing.JTextField judulTextField1;
    private javax.swing.JButton kembaliButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField penerbitTextField;
    private javax.swing.JTextField penerbitTextField1;
    private javax.swing.JTextField pengarangTextField;
    private javax.swing.JTextField pengarangTextField1;
    private javax.swing.JButton resetPencarianButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JButton simpanEditButton;
    private javax.swing.JTextField stokTextField;
    private javax.swing.JTextField stokTextField1;
    private com.toedter.calendar.JDateChooser tahunDateChooser;
    private com.toedter.calendar.JDateChooser tahunDateChooser1;
    private javax.swing.JButton tambahBukuButton;
    private javax.swing.JPanel uploadBuku;
    private javax.swing.JButton uploadBukuButton;
    // End of variables declaration//GEN-END:variables
}
 

