/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Main;

import Model.*;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class RiwayatPinjam extends javax.swing.JPanel {

    private static RiwayatPinjam instance;

    private BukuDAO bukuDAO;
    private MahasiswaDAO mahasiswaDAO;
    private PeminjamanDAO peminjamanDAO;

    private DefaultTableModel tableModel;

    
    public RiwayatPinjam() throws SQLException {
        bukuDAO = new BukuDAO();
        mahasiswaDAO = new MahasiswaDAO();
        peminjamanDAO = new PeminjamanDAO();
        initComponents();

        String nim = SessionManager.getInstance().getNim();
        if (nim != null) {
            nimTextField.setText(nim);
        } else {
            nimTextField.setText("Tidak ada"); // Menangani kasus jika nim tidak ditemukan
        }
        
        loadRiwayatPinjam();
        loadJudulBuku();
        
        
    }
    
    public void loadRiwayatPinjam() {
    String nim = SessionManager.getInstance().getNim();
    if (nim != null) {
        try {
            int idUser = new MahasiswaDAO().getIdUserByNim(nim);
            System.out.println("nim");
            List<Peminjaman> listRiwayat = peminjamanDAO.getPeminjamanByIdUser(idUser);
System.out.println("nim");
            DefaultTableModel tableModel = (DefaultTableModel) riwayatTable.getModel();
            tableModel.setRowCount(0); // Mengosongkan tabel sebelum dimuat ulang

            for (Peminjaman peminjaman : listRiwayat) {
                Buku buku = bukuDAO.getBukuById(peminjaman.getIdBuku());

                Object[] row = {
//                    peminjaman.getIdPinjam(),
//                    peminjaman.getIdBuku(),
//                    peminjaman.getIdUser(),
                    buku.getJudulBuku(),
                    buku.getPengarang(),
                    buku.getTahunTerbit(),
                    peminjaman.getTglPinjam(),
                    peminjaman.getTglKembali(),
                    peminjaman.getStatusPinjam()
                };
                tableModel.addRow(row);
            }

            riwayatTable.setModel(tableModel); // Set ulang model tabel

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}

       
     private void loadJudulBuku() {
        List<String> judulBukuList = bukuDAO.getJudulBukuList();
        for (String judul_buku : judulBukuList) {
            judulBukuComboBox.addItem(judul_buku);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        riwayatPinjam = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        riwayatTable = new javax.swing.JTable();
        tambahPeminjamanButton = new javax.swing.JButton();
        batalkanButton = new javax.swing.JButton();
        ajukanPeminjaman = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        nimTextField = new javax.swing.JTextField();
        pengarangTextField = new javax.swing.JTextField();
        pinjamButton = new javax.swing.JButton();
        btn_batal4 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        btn_batal5 = new javax.swing.JButton();
        kembaliDateChooser = new com.toedter.calendar.JDateChooser();
        tahunDateChooser = new com.toedter.calendar.JDateChooser();
        pinjamDateChooser = new com.toedter.calendar.JDateChooser();
        judulBukuComboBox = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(51, 102, 255));
        setPreferredSize(new java.awt.Dimension(571, 486));
        setLayout(new java.awt.CardLayout());

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setMinimumSize(new java.awt.Dimension(900, 860));
        mainPanel.setPreferredSize(new java.awt.Dimension(650, 580));
        mainPanel.setLayout(new java.awt.CardLayout());

        riwayatPinjam.setBackground(new java.awt.Color(255, 255, 255));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel20.setText("Riwayat Peminjaman");

        riwayatTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Judul Buku", "Pengarang", "Tahun Terbit", "Tanggal Pinjam", "Tanggal Kembali", "Status Pinjam"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(riwayatTable);

        tambahPeminjamanButton.setText("Tambah Peminjaman");
        tambahPeminjamanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahPeminjamanButtonActionPerformed(evt);
            }
        });

        batalkanButton.setText("Batalkan");
        batalkanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalkanButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout riwayatPinjamLayout = new javax.swing.GroupLayout(riwayatPinjam);
        riwayatPinjam.setLayout(riwayatPinjamLayout);
        riwayatPinjamLayout.setHorizontalGroup(
            riwayatPinjamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(riwayatPinjamLayout.createSequentialGroup()
                .addGroup(riwayatPinjamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(riwayatPinjamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(riwayatPinjamLayout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addComponent(jLabel20))
                        .addGroup(riwayatPinjamLayout.createSequentialGroup()
                            .addGap(35, 35, 35)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(riwayatPinjamLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(riwayatPinjamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tambahPeminjamanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(batalkanButton))))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        riwayatPinjamLayout.setVerticalGroup(
            riwayatPinjamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(riwayatPinjamLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(tambahPeminjamanButton)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(batalkanButton)
                .addGap(0, 359, Short.MAX_VALUE))
        );

        mainPanel.add(riwayatPinjam, "card2");

        ajukanPeminjaman.setBackground(new java.awt.Color(255, 255, 255));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel21.setText("Ajukan Peminjaman");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel22.setText("Judul Buku :");

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel23.setText("Tanggal Pinjam");

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel24.setText("NIM");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel25.setText("Pengarang :");

        nimTextField.setEditable(false);

        pengarangTextField.setEditable(false);

        pinjamButton.setBackground(new java.awt.Color(204, 204, 255));
        pinjamButton.setText("Pinjam");
        pinjamButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pinjamButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pinjamButtonActionPerformed(evt);
            }
        });

        btn_batal4.setBackground(new java.awt.Color(204, 204, 255));
        btn_batal4.setText("Kembali");
        btn_batal4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_batal4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batal4ActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel26.setText("Tahun Terbit :");

        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel27.setText("Tanggal Kembali");

        btn_batal5.setBackground(new java.awt.Color(204, 204, 255));
        btn_batal5.setText("Reset");
        btn_batal5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_batal5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batal5ActionPerformed(evt);
            }
        });

        kembaliDateChooser.setBackground(new java.awt.Color(31, 43, 91,0));
        kembaliDateChooser.setForeground(new java.awt.Color(255, 255, 255));
        kembaliDateChooser.setToolTipText("");
        kembaliDateChooser.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N

        tahunDateChooser.setBackground(new java.awt.Color(31, 43, 91,0));
        tahunDateChooser.setForeground(new java.awt.Color(255, 255, 255));
        tahunDateChooser.setToolTipText("");
        tahunDateChooser.setEnabled(false);
        tahunDateChooser.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N

        pinjamDateChooser.setBackground(new java.awt.Color(31, 43, 91,0));
        pinjamDateChooser.setForeground(new java.awt.Color(255, 255, 255));
        pinjamDateChooser.setToolTipText("");
        pinjamDateChooser.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N

        judulBukuComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                judulBukuComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel22)
                            .addComponent(jLabel25)
                            .addComponent(jLabel23)
                            .addComponent(jLabel26)
                            .addComponent(jLabel27))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nimTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                            .addComponent(pengarangTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                            .addComponent(kembaliDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                            .addComponent(tahunDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                            .addComponent(pinjamDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                            .addComponent(judulBukuComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(btn_batal4)
                        .addGap(18, 18, 18)
                        .addComponent(btn_batal5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pinjamButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(nimTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel22)
                        .addGap(27, 27, 27)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pengarangTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(judulBukuComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel26))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(tahunDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel23))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(pinjamDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kembaliDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel27)))
                .addGap(37, 37, 37)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pinjamButton)
                    .addComponent(btn_batal5)
                    .addComponent(btn_batal4))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ajukanPeminjamanLayout = new javax.swing.GroupLayout(ajukanPeminjaman);
        ajukanPeminjaman.setLayout(ajukanPeminjamanLayout);
        ajukanPeminjamanLayout.setHorizontalGroup(
            ajukanPeminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ajukanPeminjamanLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel21)
                .addContainerGap(550, Short.MAX_VALUE))
            .addGroup(ajukanPeminjamanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        ajukanPeminjamanLayout.setVerticalGroup(
            ajukanPeminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ajukanPeminjamanLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 313, Short.MAX_VALUE))
        );

        mainPanel.add(ajukanPeminjaman, "card2");

        add(mainPanel, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void tambahPeminjamanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahPeminjamanButtonActionPerformed
        // TODO add your handling code here:
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        
        mainPanel.add(ajukanPeminjaman);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_tambahPeminjamanButtonActionPerformed

    private void pinjamButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pinjamButtonActionPerformed
     try {
        // Ambil judul buku yang dipilih dari ComboBox
        String judulBuku = (String) judulBukuComboBox.getSelectedItem();

        // Cari id_buku yang bersesuaian dari tabel buku
        int idBuku = bukuDAO.getIdBukuByJudul(judulBuku);

        // Dapatkan informasi nim dari sesi
        String nim = SessionManager.getInstance().getNim();

        // Dapatkan informasi id_user yang bersesuaian dengan nim dari tabel mahasiswa
        int idUser = mahasiswaDAO.getIdUserByNim(nim);

        // Ambil tanggal pinjam dan tanggal kembali dari date chooser
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date tanggalPinjamDate = pinjamDateChooser.getDate();
        Date tanggalKembaliDate = kembaliDateChooser.getDate();

        // Validasi tanggal kembali
        if (tanggalKembaliDate.before(tanggalPinjamDate)) {
            JOptionPane.showMessageDialog(this, "Tanggal kembali tidak boleh sebelum tanggal pinjam.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Keluar dari metode jika validasi gagal
        }

        // Hitung selisih hari antara tanggal kembali dan tanggal pinjam
        long selisihMillis = tanggalKembaliDate.getTime() - tanggalPinjamDate.getTime();
        long selisihHari = selisihMillis / (1000 * 60 * 60 * 24);

        // Cek apakah selisih hari sesuai dengan aturan maksimal (5 hari)
        if (selisihHari > 5) {
            JOptionPane.showMessageDialog(this, "Tanggal kembali tidak boleh lebih dari 5 hari setelah tanggal pinjam.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Keluar dari metode jika validasi gagal
        }

        // Simpan peminjaman ke database
        boolean berhasil = peminjamanDAO.simpanPeminjaman(idUser, idBuku, dateFormat.format(tanggalPinjamDate), dateFormat.format(tanggalKembaliDate));

        if (berhasil) {
            loadRiwayatPinjam();
            JOptionPane.showMessageDialog(this, "Data peminjaman berhasil disimpan.");
            clearForm();
        } else {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan data peminjaman.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan dalam menyimpan peminjaman: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

    }//GEN-LAST:event_pinjamButtonActionPerformed

    private void btn_batal4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batal4ActionPerformed
        // TODO add your handling code here:
        
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        
        mainPanel.add(riwayatPinjam);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_btn_batal4ActionPerformed

    private void batalkanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalkanButtonActionPerformed
    int selectedRow = riwayatTable.getSelectedRow();
    if (selectedRow == -1) {
        // Jika tidak ada baris yang dipilih, keluar dari metode
        return;
    }

    String statusPinjam = (String) riwayatTable.getValueAt(selectedRow, 5); // Ambil status peminjaman dari kolom 5

    // Periksa apakah status peminjaman adalah 'diproses' untuk memungkinkan pembatalan
    if ("diproses".equals(statusPinjam)) {
        int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin membatalkan peminjaman ini?", "Konfirmasi Pembatalan Peminjaman", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                // Dapatkan informasi peminjaman berdasarkan baris yang dipilih
                String nim = SessionManager.getInstance().getNim(); // Ambil NIM dari sesi pengguna aktif
                String judulBuku = (String) riwayatTable.getValueAt(selectedRow, 0); // Ambil judul buku dari kolom 0
                int idBuku = bukuDAO.getIdBukuByJudul(judulBuku); // Ambil ID buku dari judul buku dalam baris yang dipilih
                int idUser = mahasiswaDAO.getIdUserByNim(nim); // Ambil ID USER dari NIM

                String tglPinjam = (String) riwayatTable.getValueAt(selectedRow, 3); // Ambil tanggal pinjam dari kolom 3
                String tglKembali = (String) riwayatTable.getValueAt(selectedRow, 4); // Ambil tanggal kembali dari kolom 4

                boolean cancelSuccess = peminjamanDAO.cancelPeminjaman(idUser, idBuku, tglPinjam, tglKembali); // Memanggil metode pembatalan peminjaman dari DAO

                if (cancelSuccess) {
                    JOptionPane.showMessageDialog(null, "Peminjaman berhasil dibatalkan.", "Pembatalan Berhasil", JOptionPane.INFORMATION_MESSAGE);
                    loadRiwayatPinjam(); // Memuat ulang data tabel setelah pembatalan berhasil
                } else {
                    JOptionPane.showMessageDialog(null, "Gagal membatalkan peminjaman.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Terjadi kesalahan dalam membatalkan peminjaman.", "Error", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }
    } else {
        JOptionPane.showMessageDialog(null, "Peminjaman tidak dapat dibatalkan karena status bukan 'diproses'.", "Batalkan Peminjaman", JOptionPane.WARNING_MESSAGE);
    }

    }//GEN-LAST:event_batalkanButtonActionPerformed

    private void btn_batal5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batal5ActionPerformed
        // TODO add your handling code here:
        clearForm();
        
        
    }//GEN-LAST:event_btn_batal5ActionPerformed

    private void clearForm() {
    judulBukuComboBox.setSelectedIndex(0); // Memilih indeks pertama atau item kosong
    pengarangTextField.setText("");
    tahunDateChooser.setDate(null);
    pinjamDateChooser.setDate(null); // Menetapkan tanggal menjadi null
    kembaliDateChooser.setDate(null); // Menetapkan tanggal menjadi null
    // Tambahan lainnya sesuai kebutuhan
}

    private void judulBukuComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_judulBukuComboBoxActionPerformed
        // Ambil judul buku yang dipilih
    String selectedJudulBuku = (String) judulBukuComboBox.getSelectedItem();
    
    // Dapatkan detail buku berdasarkan judul yang dipilih
    Buku buku = bukuDAO.getBukuByJudul(selectedJudulBuku);
    
    if (buku != null) {
        // Set detail buku ke dalam komponen GUI
        pengarangTextField.setText(buku.getPengarang());
        
        // Tampilkan tahun terbit pada tahunDateChooser jika format sesuai
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date tahunTerbitDate = sdf.parse(buku.getTahunTerbit());
            tahunDateChooser.setDate(tahunTerbitDate);
        } catch (ParseException ex) {
            // Tangani jika format tanggal tidak sesuai
            ex.printStackTrace();
        }
    } else {
        // Kosongkan komponen GUI jika detail buku tidak ditemukan
        pengarangTextField.setText("");
        
        // Kosongkan JDateChooser
        tahunDateChooser.setDate(null);
    }
    }//GEN-LAST:event_judulBukuComboBoxActionPerformed

    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ajukanPeminjaman;
    private javax.swing.JButton batalkanButton;
    private javax.swing.JButton btn_batal4;
    private javax.swing.JButton btn_batal5;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> judulBukuComboBox;
    private com.toedter.calendar.JDateChooser kembaliDateChooser;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField nimTextField;
    private javax.swing.JTextField pengarangTextField;
    private javax.swing.JButton pinjamButton;
    private com.toedter.calendar.JDateChooser pinjamDateChooser;
    private javax.swing.JPanel riwayatPinjam;
    private javax.swing.JTable riwayatTable;
    private com.toedter.calendar.JDateChooser tahunDateChooser;
    private javax.swing.JButton tambahPeminjamanButton;
    // End of variables declaration//GEN-END:variables
}

